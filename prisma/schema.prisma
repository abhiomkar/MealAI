generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  emailVerified DateTime?
  createdAt     DateTime     @default(now())
  image         String?
  accounts      Account[]
  sessions      Session[]
  ingredients   Ingredient[]
  mealPlans     MealPlans[]
}

model Ingredient {
  id   String @id @default(cuid())
  name String
  user User[]
}

model MealPlans {
  id        String        @id @default(cuid())
  createdAt DateTime      @default(now())
  weekPlan  MealDayPlan[]
  User      User?         @relation(fields: [userId], references: [id])
  userId    String?
}

model MealDayPlan {
  id          String     @id @default(cuid())
  weekday     String
  ingredient  String
  description String
  MealPlans   MealPlans? @relation(fields: [mealPlansId], references: [id])
  mealPlansId String?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
